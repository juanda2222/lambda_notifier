AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: This template sets up all resources for the lambda notification system 

# Parameters:
  # InStrideServicesAccountID:
  #   Type: String
  #   Default: '{{resolve:ssm:InStrideServicesAccountID:1}}'
  #   Description: 12-digit AWS account ID

  # UvaAcademicPartnerId:
  #   Type: String
  #   Default: '785983a4-dfa0-4d57-bc54-7af4f8a89f47'
  #   Description: Academic Partner ID of UVA

Globals:
  Function:
    Timeout: 10
    Runtime: nodejs12.x

Resources:

  # ----- STORAGE -----
  NotificationsConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}--notification-config'

  BackupNotificationsConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}--backup-notification-config'

  # This should be used to optimize the cloud function build size
  # libs:
  #   Type: AWS::Lambda::LayerVersion
  #   Properties:
  #     LayerName: !Sub '${AWS::StackName}--layer'
  #     Description: Dependencies for the notification app.
  #     Content:
  #       S3Bucket: !Sub '${AWS::StackName}--notification-config'
  #       S3Key: layer.zip
  #     CompatibleRuntimes:
  #       - nodejs12.x    

  # ---------- NOTIFICATION LAMBDA  -----------
  DefaultSNSTopicForEmail:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${AWS::StackName}--default-email-topic'

    DependsOn: 
      - NotificationFromLogFunction
      - UpdateTriggersFunction

  InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub '${AWS::StackName}--notification-from-log'
      Action: lambda:InvokeFunction
      Principal: logs.amazonaws.com
      SourceArn: !Sub 'arn:aws:logs:us-east-1:133590650843:log-group:*'
    
    DependsOn: NotificationFromLogFunction
  
  NotificationFromLogFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      FunctionName: !Sub '${AWS::StackName}--notification-from-log'
      Handler: index.LambdaNotifierHandler
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:*
              Resource: '*'
            - Effect: Allow
              Action:
                - sns:*
              Resource: !Sub 'arn:aws:sns:us-east-1:133590650843:${AWS::StackName}--default-email-topic'
      Environment:
        Variables:
          LAMBDA_NOTIFIER_NAME: !Sub '${AWS::StackName}--notification-from-log'
          NOTIFICATION_CONFIG_BUCKET_NAME: !Sub '${AWS::StackName}--notification-config'
          BACKUP_CONFIG_NAME: !Sub '${AWS::StackName}--backup-notification-config'
          DEFAULT_SNS_ARN: !Sub 'arn:aws:sns:us-east-1:133590650843:${AWS::StackName}--default-email-topic'

    

  # ---------- UPDATE LAMBDA  -----------
  UpdateTriggersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build
      FunctionName: !Sub '${AWS::StackName}--update-triggers'
      Handler: index.LambdaUpdatedHandler
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Sid: ReadS3ConfigFiles
              Effect: Allow
              Action:
                - s3:*
              Resource: '*'
            - Sid: MakeLogsFilters
              Effect: Allow
              Action:
                - logs:*
              Resource: '*'
            - Sid: AllowSNSAccess
              Effect: Allow
              Action:
                - sns:*
              Resource: !Sub 'arn:aws:sns:us-east-1:133590650843:${AWS::StackName}--default-email-topic'

      Environment:
        Variables:
          LAMBDA_NOTIFIER_NAME: !Sub '${AWS::StackName}--notification-from-log'
          NOTIFICATION_CONFIG_BUCKET_NAME: !Sub '${AWS::StackName}--notification-config'
          BACKUP_CONFIG_NAME: !Sub '${AWS::StackName}--backup-notification-config'
          DEFAULT_SNS_ARN: !Sub 'arn:aws:sns:us-east-1:133590650843:${AWS::StackName}--default-email-topic'
      Events:
        S3ConfigChangeTrigger:
          Type: S3
          Properties:
            Bucket: !Ref NotificationsConfigBucket
            Events: 
              - s3:ObjectCreated:*
              - s3:ObjectRemoved:*
      # Layers:
      #   - !Ref libs

